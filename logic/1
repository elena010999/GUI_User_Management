#!/usr/bin/env python3
import tkinter as tk
from tkinter import messagebox, simpledialog
from logic.helper_functions import _root, run_pkexec, get_all_users, get_all_groups

def create_user():
    users = get_all_users()
    groups = get_all_groups()

    top = tk.Toplevel(_root)
    top.title("Create New User")
    top.geometry("400x500")
    top.resizable(False, False)

    tk.Label(top, text="Username:").pack(pady=5)
    username_var = tk.StringVar()
    tk.Entry(top, textvariable=username_var).pack(pady=5, fill="x", padx=10)

    tk.Label(top, text="Shell (optional):").pack(pady=5)
    shell_var = tk.StringVar()
    tk.Entry(top, textvariable=shell_var).pack(pady=5, fill="x", padx=10)

    tk.Label(top, text="Select Groups:").pack(pady=5)

    # Scrollable group list
    group_frame = tk.Frame(top)
    group_frame.pack(fill="both", expand=True, padx=10)

    canvas = tk.Canvas(group_frame)
    scrollbar = tk.Scrollbar(group_frame, orient="vertical", command=canvas.yview)
    scrollable_frame = tk.Frame(canvas)
    scrollable_frame.bind("<Configure>", lambda e: canvas.configure(scrollregion=canvas.bbox("all")))
    canvas.create_window((0,0), window=scrollable_frame, anchor="nw")
    canvas.configure(yscrollcommand=scrollbar.set)
    canvas.pack(side="left", fill="both", expand=True)
    scrollbar.pack(side="right", fill="y")

    group_vars = {}
    for g in groups:
        var = tk.IntVar()
        tk.Checkbutton(scrollable_frame, text=g, variable=var).pack(anchor="w")
        group_vars[g] = var

    def on_submit():
        username = username_var.get().strip()
        shell = shell_var.get().strip() or None
        selected_groups = [g for g, var in group_vars.items() if var.get() == 1]

        if not username:
            messagebox.showerror("Error", "Username is required!")
            return
        if username in users:
            messagebox.showerror("Error", f"User '{username}' already exists!")
            return

        cmd = ["useradd", username]
        if shell:
            cmd += ["-s", shell]

        if not selected_groups:
            cmd += ["-G", username]  # default group same as username
        else:
            cmd += ["-G", ",".join(selected_groups)]

        run_pkexec(cmd, f"User '{username}' created successfully!", f"Failed to create user '{username}'. Make sure you have sudo privileges.")
        top.destroy()

    tk.Button(top, text="Create User", command=on_submit).pack(pady=10)

